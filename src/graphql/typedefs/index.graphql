type Query {
  users: [PublicUser]!
  user(id: ID!): PublicUser
  login(email: String!, password: String!): LoggedInUser
  getStats: Stats!
  getMeetings(filter: IMeetingFilter): [Meeting]!
  checkInvitedUser(meetingId: String): UserInvite!
}

type Mutation {
  createUser(user: UserCreateInput!): PublicUser!
  updateUser(user: UserUpdateInput!): PublicUser!
  forgotPassword(email: String!): Response!
  resetPassword(token: String!, password: String!): Response!
  authorizeIntegrationCalender(
    accessToken: String!
    refreshToken: String!
    type: String!
  ): Response!
  setStats: Stats!
  addMeeting(meeting: AddMeetingInput!): Meeting!
}
